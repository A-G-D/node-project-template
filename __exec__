#!/usr/bin/env bash

npm init -y
npm install --save-dev \
    @babel/cli \
    @babel/core \
    @babel/eslint-parser \
    @babel/preset-env \
    babel-loader \
    css-loader \
    cssjson \
    eslint \
    eslint-config-prettier \
    eslint-config-standard \
    eslint-plugin-import \
    eslint-plugin-node \
    eslint-plugin-promise \
    express \
    html-loader \
    html-webpack-plugin \
    postcss-loader \
    prettier \
    raw-loader \
    sass \
    sass-loader \
    style-loader \
    webpack \
    webpack-cli \
    webpack-dev-middleware \
    webpack-dev-server

node > out_package.json << EOF
const data = require('./package.json');
data.scripts.watch = "webpack --watch";
data.scripts.start = "webpack serve --open";
data.scripts.server = "node server.js";
data.scripts.build = "webpack";
console.log(JSON.stringify(data, null, 2));
EOF
rm -f package.json
mv out_package.json package.json

mkdir src src/components
touch src/index.js src/styles.css

filename=$(node -e "console.log(require('./package.json').name);")

cat > src/index.html << EOF
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="index.js" defer></script>
    <title>$filename</title>
</head>
<body>
    
</body>
</html>
EOF

echo "# $filename" >> README.md

cat > webpack.config.js << EOF
const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = {
  mode: 'development',
  entry: {
    index: './src/index.js'
  },
  devtool: 'inline-source-map',
  devServer: {
    static: './dist'
  },
  module: {
    rules: [
      {
        test: /\.(sa|sc|c)ss$/i,
        use: [
          "style-loader",
          "css-loader",
          "postcss-loader",
          "sass-loader"
        ],
      },
      {
        test: /\.html$/i,
        use: "html-loader",
      },
      {
        test: /\.m?js$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
          options: {
            presets: [
              ['@babel/preset-env', { targets: "defaults" }]
            ],
          },
        },
      },
    ],
  },
  plugins: [
    new HtmlWebpackPlugin(
      {
        title: '$filename',
        template: './src/index.html'
      }
    )
  ],
  output: {
    filename: '[name].bundle.js',
    path: path.resolve(__dirname, 'dist'),
    clean: true
  }
};
EOF

cat > .gitignore << EOF
node_modules/**
EOF

cat > babel.config.json << EOF
{
  "presets": ["@babel/preset-env"]
}
EOF

cat > .prettierignore << EOF
# Ignore artifacts:
build
coverage
EOF

cat > .prettierrc.json << EOF
{
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "[javascript]": {
    "editor.defaultFormatter": null
  }
}
EOF

cat > .eslintrc.json << EOF
{
  "env": {
    "browser": true,
    "commonjs": true,
    "es2021": true
  },
  "extends": ["standard", "prettier"],
  "parserOptions": {
    "ecmaVersion": "latest"
  },
  "rules": {
    "no-console": "off",
    "no-lone-blocks": "off",
    "no-unused-vars": "warn",
    "import/no-webpack-loader-syntax": "off"
  },
  "parser": "@babel/eslint-parser"
}
EOF

git init
git add .
git commit -m "Initial commit"
git branch -M main
git checkout -b devel
